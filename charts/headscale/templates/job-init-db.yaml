apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "headscale.fullname" . }}-init-db
  labels:
    {{- include "headscale.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "headscale.fullname" . }}-init-db
      labels:
        {{- include "headscale.labels" . | nindent 8 }}
    spec:
      containers:
        - name: init-db
          image: postgres:alpine
          env:
            - name: POSTGRES_HOST
              value: {{ .Values.database.host }}
            - name: POSTGRES_PORT
              value: {{ .Values.database.port | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.database.name }}
            - name: POSTGRES_USER
              value: {{ .Values.database.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.database.pass }}
          command:
            - sh
            - -c
            - |
              until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2;
              done;
              psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d gorizond_truncate -c "CREATE DATABASE $POSTGRES_DB;" || echo true
              echo 1 > /tmp/done
          volumeMounts:
            - name: tmp-storage
              mountPath: /tmp
        - name: headscale-init-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tagDebug }}"
          command: ["sh", "-c"]
          args:
            - |-
              until [ -f /tmp/done ]; do
                sleep 2
              done
              headscale serve &
              until nc -zv 0.0.0.0:8080; do
                sleep 2
              done
          volumeMounts:
            - name: config
              mountPath: "/etc/headscale/"
              readOnly: true
            - name: tmp-storage
              mountPath: /tmp
      restartPolicy: OnFailure
      volumes:
        - name: tmp-storage
          emptyDir: {}
        - name: config
          secret:
            secretName: {{ include "headscale.fullname" . }}
